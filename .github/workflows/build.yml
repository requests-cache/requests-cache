name: Build

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_dispatch:
env:
  LATEST_PY_VERSION: '3.13'
  PYTEST_VERBOSE: 'true'

jobs:
  # Run tests for each supported python version
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          ['3.13', '3.12', '3.11', '3.10', '3.9', '3.8', 'pypy3.9', 'pypy3.10']
      fail-fast: false
    services:
      nginx:
        image: kennethreitz/httpbin
        ports:
          - 8080:80

    steps:
      # Install dependencies, with caching
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Install dependencies
        run: |
          uv python install ${{ matrix.python-version }}
          uv sync --all-extras

      # Start integration test databases
      - uses: supercharge/mongodb-github-action@90004df
        with:
          mongodb-version: 5.0
      - uses: supercharge/redis-github-action@ea9b21c
        with:
          redis-version: 6
      - uses: rrainn/dynamodb-action@52f02829330b77b26c950d2ecf35bb6d881749cb

      # Run tests with coverage report
      - name: Run unit + integration tests
        if: ${{ !contains(matrix.python-version, 'pypy') }}
        run: uv run nox -e cov -- xml

      # pypy tests aren't run in parallel, so too slow for integration tests
      - name: Run unit tests only
        if: ${{ contains(matrix.python-version, 'pypy') }}
        run: uv run pytest tests/unit

      # Latest python version: send coverage report to codecov
      - name: 'Upload coverage report to Codecov'
        if: ${{ matrix.python-version == env.LATEST_PY_VERSION }}
        uses: codecov/codecov-action@0565863

  # Run code analysis checks via pre-commit hooks
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.LATEST_PY_VERSION }}
      - name: Run style checks & linting
        uses: pre-commit/action@2c7b380
      - name: Scan dependencies for known vulnerabilities
        uses: pypa/gh-action-pip-audit@v1.1.0
        with:
          vulnerability-service: osv
          # Ignore issues with pip and setuptools versions used by the action itself
          ignore-vulns: |
            GHSA-cx63-2mw6-8hw5
            PYSEC-2023-228
            PYSEC-2022-43012
